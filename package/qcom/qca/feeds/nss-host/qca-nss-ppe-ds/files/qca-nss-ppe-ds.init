#!/bin/sh /etc/rc.common
#
# Copyright (c) 2022 Qualcomm Innovation Center, Inc. All rights reserved.
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

configure_irq_affinity() {

	[ -f /tmp/sysinfo/board_name ] && {
		board=ap$(cat /tmp/sysinfo/board_name | awk -F 'ap' '{print$2}')
	}

	ppeds_nodes=$(cat /proc/interrupts | grep edma_ppeds_rxfill_ | wc -l)
	if [ $ppeds_nodes == 0 ]; then
		echo " No PPEDS interrupts present"
		echo "  Board Name: $board"
		return
	fi

	rxfill_interrupts=$(grep edma_ppeds_rxfill /proc/interrupts | cut -d ':' -f 1 | tr -d ' ')
	txcmpl_interrupts=$(grep edma_ppeds_txcmpl /proc/interrupts | cut -d ':' -f 1 | tr -d ' ')
	rxdesc_interrupts=$(grep edma_ppeds_rxdesc /proc/interrupts | cut -d ':' -f 1 | tr -d ' ')
	wbmrel_interrupts=$(grep ppe_wbm_rel /proc/interrupts | cut -d ':' -f 1 | tr -d ' ')
	reo2ppe_interrupts=$(grep reo2ppe /proc/interrupts | cut -d ':' -f 1 | tr -d ' ')
	ppe2tcl_interrupts=$(grep ppe2tcl /proc/interrupts | cut -d ':' -f 1 | tr -d ' ')

	counter=0
	for i in $rxdesc_interrupts; do
		counter=$((counter+1))
		if [ $counter == 1 ]; then
			echo $1 > /proc/irq/$i/smp_affinity
		elif [ $counter == 2 ]; then
			echo $2 > /proc/irq/$i/smp_affinity
		elif [ $counter == 3 ]; then
			echo $3 > /proc/irq/$i/smp_affinity
		elif [ $counter == 4 ]; then
			echo $4 > /proc/irq/$i/smp_affinity
		fi
	done

	counter=0
	for i in $rxfill_interrupts; do
		counter=$((counter+1))
		if [ $counter == 1 ]; then
			echo $1 > /proc/irq/$i/smp_affinity
		elif [ $counter == 2 ]; then
			echo $2 > /proc/irq/$i/smp_affinity
		elif [ $counter == 3 ]; then
			echo $3 > /proc/irq/$i/smp_affinity
		elif [ $counter == 4 ]; then
			echo $4 > /proc/irq/$i/smp_affinity
		fi
	done

	counter=0
	for i in $txcmpl_interrupts; do
		counter=$((counter+1))
		if [ $counter == 1 ]; then
			echo $1 > /proc/irq/$i/smp_affinity
		elif [ $counter == 2 ]; then
			echo $2 > /proc/irq/$i/smp_affinity
		elif [ $counter == 3 ]; then
			echo $3 > /proc/irq/$i/smp_affinity
		elif [ $counter == 4 ]; then
			echo $4 > /proc/irq/$i/smp_affinity
		fi
	done

	counter=0
	for i in $wbmrel_interrupts; do
		counter=$((counter+1))
		if [ $counter == 1 ]; then
			echo $1 > /proc/irq/$i/smp_affinity
		elif [ $counter == 2 ]; then
			echo $2 > /proc/irq/$i/smp_affinity
		elif [ $counter == 3 ]; then
			echo $3 > /proc/irq/$i/smp_affinity
		elif [ $counter == 4 ]; then
			echo $4 > /proc/irq/$i/smp_affinity
		fi
	done

	counter=0
	for i in $reo2ppe_interrupts; do
		counter=$((counter+1))
		if [ $counter == 1 ]; then
			echo $1 > /proc/irq/$i/smp_affinity
		elif [ $counter == 2 ]; then
			echo $2 > /proc/irq/$i/smp_affinity
		elif [ $counter == 3 ]; then
			echo $3 > /proc/irq/$i/smp_affinity
		elif [ $counter == 4 ]; then
			echo $4 > /proc/irq/$i/smp_affinity
		fi
	done

	counter=0
	for i in $ppe2tcl_interrupts; do
		counter=$((counter+1))
		if [ $counter == 1 ]; then
			echo $1 > /proc/irq/$i/smp_affinity
		elif [ $counter == 2 ]; then
			echo $2 > /proc/irq/$i/smp_affinity
		elif [ $counter == 3 ]; then
			echo $3 > /proc/irq/$i/smp_affinity
		elif [ $counter == 4 ]; then
			echo $4 > /proc/irq/$i/smp_affinity
		fi
	done

	echo "Configured the IRQ affinity for DS mode in $board"
}

start() {
	board=$(cat /tmp/sysinfo/board_name)
	case $board in
		*'mi'*)
		configure_irq_affinity 2 4 2 4
		;;
		*)
		configure_irq_affinity 4 2 4 2
		;;
	esac
}
